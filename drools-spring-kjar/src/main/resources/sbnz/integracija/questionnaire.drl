package sbnz.integracija;

import com.example.sbnz.model.*;
import com.example.sbnz.dto.*;
import java.util.*;
import java.lang.*;

global QuestionnaireDTO questionnaire;

rule "Remove banned champions" salience 10
	when
		$ch: ChampionDTO(name memberOf questionnaire.bannedChampions);
		$it: Iterator();
	then
		$it.remove();
		delete($ch);
		delete($it);
end
		
rule "Remove picked champions" salience 10
	when
		$ch: ChampionDTO(name memberOf questionnaire.pickedChampions);
		$it: Iterator();
	then
		$it.remove();
		delete($ch);
		delete($it);
end

rule "Score difficulty"
	no-loop true
	lock-on-active true
	when
		$ch: ChampionDTO();
	then
		int difficultyDifference = Math.abs(Difficulty.fromString(questionnaire.getDifficulty()).getValue() - $ch.getDifficulty().getValue());
		$ch.setScore($ch.getScore() + ((difficultyDifference == 0) ? 40 : -difficultyDifference * 20));
		
		update($ch);
end

rule "Score style"
	no-loop true
	lock-on-active true
	when
		$ch: ChampionDTO();
	then
		int styleDifference = -Math.abs(Math.round(($ch.getStyle() - questionnaire.getStyle()) / 2));
		$ch.setScore($ch.getScore() + styleDifference);
		
		update($ch);
end

rule "Score attack type"
	no-loop true
	lock-on-active true
	when
		$ch: ChampionDTO();
	then
		$ch.setScore($ch.getScore() + ((AttackType.fromString(questionnaire.getAttackType()) == $ch.getAttackType()) ? 35 : -20));
		
		update($ch);
end

rule "Score damage type"
	no-loop true
	lock-on-active true
	when
		$ch: ChampionDTO();
	then
		$ch.setScore($ch.getScore() + ((DamageType.fromString(questionnaire.getDamageType()) == $ch.getDamageType()) ? 40 : -30));
		
		update($ch);
end
